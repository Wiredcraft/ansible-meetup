---
# Simply setup the various hosts
- hosts: all
  user: root
  roles:
    - role: common

# Install nginx
- hosts: web
  user: root
  roles: 
    - role: nginx
      nginx_sites:
        default:
            - listen 8080
            - server_name _
            - root "/var/www/site"
            - index index.html

  tasks:
    - name: Prepare html folder
      file:
        name=/var/www/site
        owner=www-data
        group=www-data
        mode=755
        state=directory
    - name: Copy content to nginx folder
      template:
        src=index.orig.html.j2
        dest=/var/www/site/index.html
        owner=www-data
        group=www-data



# Install haproxy
- hosts: lb
  user: root
  roles:
    - role: haproxy
      haproxy_frontends:
        - name: default
          bind: '*:80'
          acl:
            - name: www
              condition: hdr(host) -i www.ansible-meetup.wiredcraft.net
            - name: orig
              condition: hdr(host) -i orig.ansible-meetup.wiredcraft.net
            - name: new
              condition: hdr(host) -i new.ansible-meetup.wiredcraft.net
          backends:
            - name: web1
              condition: if www
            - name: web1
              condition: if orig
            - name: web2
              condition: if new
          default_backend: webservers
      haproxy_backends:
        - name: webservers
          balance: roundrobin
          servers:
          - name: web1
            ip: "{{ hostvars['web1']['ansible_eth0']['ipv4']['address'] }}"
            port: 8080
          - name: web2
            ip: "{{ hostvars['web2']['ansible_eth0']['ipv4']['address'] }}"
            port: 8080
        - name: web1
          servers:
          - name: web1
            ip: "{{ hostvars['web1']['ansible_eth0']['ipv4']['address'] }}"
            port: 8080
        - name: web2
          servers:
          - name: web2
            ip: "{{ hostvars['web2']['ansible_eth0']['ipv4']['address'] }}"
            port: 8080
